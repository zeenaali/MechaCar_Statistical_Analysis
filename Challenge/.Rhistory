load("~/Desktop/Boot_camp/R_Analysis/01_Demo/.RData")
setwd("~/Desktop/Boot_camp/R_Analysis/01_Demo")
plt <- ggplot(mpg,aes(y=hwy))
install.packages(ggplot2)
library(ggplot2)
plt <- ggplot(mpg,aes(y=hwy))
plt + geom_boxplot()
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
library(jsonlite)
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
library(tidyverse)
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)") #create heatmap with labels
plt + geom_tile() + theme(axis.text.x=element_text(angle=45,hjust=1))
sardines <- read.csv(file="../Resources/sardines.csv")
setwd("~/Desktop/Boot_camp/Module 15/15-2-Student_Resources/03-Stu_Sardines/Unsolved")
sardines <- read.csv(file="../Resources/sardines.csv")
View(sardines)
?subset
# Calculate the population mean for Sardine Vertebrae in Alaska.
# Hint: use the subset() function to get only the data for Alaska.
alaska_sardines <- subset(sardines, location == 1)
View(alaska_sardines)
mean(alaska_sardines$vertebrae)
# Calculate the population mean for Sardine Vertebrae in San Diego.
# Hint: use the subset() function to get only the data for San Diego.
san_sardines <- subset(sardines, location == 6)
mean(san_sardines$vertebrae)
# Calculate Independent (Two Sample) T-Test
t.test(alaska_sardines,san_sardines)
alaska_sardines <- subset(sardines, location == 1)
mean_alaska <- mean(alaska_sardines$vertebrae)
# Calculate the population mean for Sardine Vertebrae in San Diego.
# Hint: use the subset() function to get only the data for San Diego.
san_sardines <- subset(sardines, location == 6)
mean_san <- mean(san_sardines$vertebrae)
# Calculate Independent (Two Sample) T-Test
t.test(alaska_sardines,san_sardines)
t.test(mean_alaska,mean_san)
# Calculate Independent (Two Sample) T-Test
t.test(mean_alaska, mean_san)
# Calculate the population mean for Sardine Vertebrae in Alaska.
# Hint: use the subset() function to get only the data for Alaska.
alaska_sardines <- subset(sardines, location == 1)
mean_alaska <- mean(alaska_sardines$vertebrae)
# Calculate the population mean for Sardine Vertebrae in San Diego.
# Hint: use the subset() function to get only the data for San Diego.
san_sardines <- subset(sardines, location == 6)
mean_san <- mean(san_sardines$vertebrae)
# Calculate Independent (Two Sample) T-Test
t.test(mean_alaska, mean_san)
# Calculate Independent (Two Sample) T-Test
t.test(mean(alaska_sardines$vertebrae), mean(san_sardines$vertebrae))
sardines <- read.csv(file="../Resources/sardines.csv")
# Calculate the population mean for Sardine Vertebrae in Alaska.
# Hint: use the subset() function to get only the data for Alaska.
alaska_sardines <- subset(sardines, location == 1)
mean_alaska <- mean(alaska_sardines$vertebrae)
# Calculate the population mean for Sardine Vertebrae in San Diego.
# Hint: use the subset() function to get only the data for San Diego.
san_sardines <- subset(sardines, location == 6)
mean_san <- mean(san_sardines$vertebrae)
# Calculate Independent (Two Sample) T-Test
t.test(mean_alaska, mean_san)
# Calculate Independent (Two Sample) T-Test
t.test(alaska_sardines$vertebrae, san_sardines$vertebrae)
setwd("~/Desktop/Boot_camp/Module 15/15-2-Student_Resources/05-Stu_ANOVA/Unsolved")
# Read in the CSV file.
hair <- read.csv(file="../Resources/hair.csv")
view(hair)
#  Plot the data using ggplot
ggplot(hair,aes(x=factor(HairColour),y=pain)) + geom_boxplot()
#  Plot the data using ggplot
ggplot(hair,aes(x=factor(HairColour),y=Pain)) + geom_boxplot()
# Determine the p-value using ANOVA
summary(aov(Pain ~ factor(HairColour),data = hair))
clear
clear()
setwd("~/Desktop/Boot_camp/R_Analysis/01_Demo")
load("~/Desktop/Boot_camp/R_Analysis/01_Demo/.RData")
View(plt)
load("~/Desktop/Boot_camp/R_Analysis/01_Demo/.RData")
mpg_summary <- mpg %>% group_by(model, year), summarize(mean_hwy=mean(hwy), .groups = 'keep')
mpg_summary <- mpg %>% group_by(model,year), summarize(mean_hwy=mean(hwy), .groups = 'keep')
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
View(mpg_summary)
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (mpg)") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust=.5))
plt <- ggplot(mpg, aes(x=manfacturer,y=hwy))
plt + geom_boxplot() +
theme(axis.text.x = element_text(angle = 45,hjust=1)) +
geom_point()
plt <- ggplot(mpg, aes(x=manufacturer,y=hwy))
plt + geom_boxplot() +
theme(axis.text.x = element_text(angle = 45,hjust=1)) +
geom_point()
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + #add scatter plot with labels
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
?facet()
? facet()
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
head(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot with labels rotated 45 degrees
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
ggplot(mtcars,aes(x=wt)) + geom_density()
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
sample_table <- population_table %>% sample_n(50) #generate 50 randomly sampled data points
mtcars.head()
head(mtcars)
plt <- ggplot(mtcars, aes(x=hp,y=qsec))
plt + geom_point()
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
setwd("~/Desktop/Boot_camp/MechaCar_Statistical_Analysis/Challenge")
mecha_car <- read.csv(file = 'MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
#linear regression for all variables
lm(mpg ~ vehicle_weight +
spoiler_angle + ground_clearance + AWD + vehicle_length,data=mecha_car)
#p-value and r-squared  for all variables
summary(lm(mpg ~ vehicle_weight +
spoiler_angle + ground_clearance + AWD + vehicle_length,data=mecha_car))
#Import and read the csv file
suspen_coil <- read.csv(file = 'Data/Suspension_Coil.csv', check.names = F, stringsAsFactors = F)
#Create total summary df, using summarize()
total_summary <-  suspen_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = 'keep')
#Create lot summary df, using group_by() & summarize()
lot_summary <- suspen_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = 'keep')
#Import and read the csv file
suspen_coil <- read.csv(file = 'Suspension_Coil.csv', check.names = F, stringsAsFactors = F)
#Create total summary df, using summarize()
total_summary <-  suspen_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = 'keep')
#Create lot summary df, using group_by() & summarize()
lot_summary <- suspen_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = 'keep')
View(total_summary)
View(total_summary)
View(lot_summary)
#t-test across all manufacturing lots against the population mean = 1500 PSI
t.test(suspen_coil$PSI, mu=1500)
#t-test lot1 against population mean = 1500 PSI
lot1 <- suspen_coil %>% subset(Manufacturing_Lot=="Lot1")
t.test(lot1$PSI, mu=1500)
#t-test lot2 against population mean = 1500 PSI
lot2 <- suspen_coil %>% subset(Manufacturing_Lot=="Lot2")
t.test(lot2$PSI, mu=1500)
#t-test lot3 against population mean = 1500 PSI
lot3 <- suspen_coil %>% subset(Manufacturing_Lot=="Lot3")
t.test(lot3$PSI, mu=1500)
